name: CI/CD for Blazor.Avatar

on: [push, pull_request]

jobs:
  # build:
  #   name: Build & Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup .NET SDK
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: 7.0.x
  #     - name: Build project (Release)
  #       run: dotnet build -c Release
  #     - name: Run tests (Release)
  #       run: dotnet test --no-build -c Release
  
  # release:
  #   name: Release nuget package
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   if: startsWith(github.event.ref, 'refs/tags/v')
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup .NET SDK
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: 7.0.x
  #     - name: Verify commit exists in origin/master
  #       run: >
  #         git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/* &&
  #         git branch --remote --contains | grep origin/master
  #     - name: Set VERSION variable from tag
  #       run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
  #     - name: Build project (Release)
  #       run: dotnet build -c Release
  #     - name: Pack library
  #       run: dotnet pack -c Release --output . /p:Version=${VERSION}      
  #     - name: Push to nuget.org
  #       run: dotnet nuget push Blazor.Avatar.${VERSION}.nupkg --source $NUGET_SOURCE --api-key $API_KEY
  #       env:
  #         NUGET_SOURCE: https://api.nuget.org/v3/index.json
  #         API_KEY: ${{ secrets.NUGET_API_KEY }}

  deploy-to-github-page:
    name: Deploy sample app to Github page
    runs-on: ubuntu-latest
    # needs: [release]

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    env:
      PUBLISH_PATH: ./publish-release
      PROJECT_FILE: samples/Blazor.Avatar.Samples.WebAssembly/Blazor.Avatar.Samples.WebAssembly.csproj
      ARTIFACT_NAME: github-pages

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x
      # Build first so that it can generate all the JS files
      - name: Build
        run: dotnet build -c Release ${PROJECT_FILE}
      - name: Publish sample app
        run: dotnet publish ${PROJECT_FILE} -c Release -o ${PUBLISH_PATH} --nologo
      # Changes the base-tag in index.html from '/' to 'blazor-avatar' to match GitHub Pages repository subdirectory
      - name: Change base-tag in index.html from / to blazor-avatar
        run: sed -i 's/<base href="\/" \/>/<base href="\/${REPO_NAME}\/" \/>/g' ${PUBLISH_PATH}/wwwroot/index.html
        env:
          REPO_NAME: blazor-avatar
      # Add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project
      # This allows files and folders starting with an underscore)
      - name: Add empty .nojekyll file
        run: touch ${PUBLISH_PATH}/wwwroot/.nojekyll
      # Copy index.html to 404.html to serve the same file when a file is not found
      - name: Copy index.html to 404.html
        run: cp ${PUBLISH_PATH}/wwwroot/index.html ${PUBLISH_PATH}/wwwroot/404.html
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${PUBLISH_PATH}/wwwroot/
          name: ${ARTIFACT_NAME}
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: ${ARTIFACT_NAME}
